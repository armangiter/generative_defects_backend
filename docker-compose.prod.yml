version: "3.8"

services:
  web:
    container_name: generative_defects_web
    hostname: generative
    build: .
    command: entrypoints/web_entrypoint.sh
    ports:
      - "80:8000"
    restart: "always"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - ENVIRONMENT=prod
      - DJANGO_SETTINGS_MODULE=config.settings.prod
    networks:
      - generative-network
      - inference-network

  db:
    container_name: generative_defects_db
    image: postgres:14.6
    env_file:
      - .env
    volumes:
        - pgdata:/var/lib/postgresql/data/
    networks:
      - generative-network

  minio:
    container_name: generative_defects_minio
    image: minio/minio
    hostname: "minio"
    volumes:
      - minio-data:/minio_files
    env_file:
      - .env
    command: 'minio server /minio_files --console-address ":9001"'
    ports:
      - "81:9000"
      - "9001:9001"
    networks:
      - generative-network
      - minio-network

  celery:
    container_name: generative_defects_celery
    build: .
    command: celery -A defect_generator.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - generative-network
      - inference-network
      
  redis:
    container_name: generative_defects_redis
    restart: always
    image: redis:6.2.11-alpine
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - generative-network

volumes:
  redis-data:
  minio-data:
  pgdata:

networks:
  generative-network:
  minio-network:
    external: true
  inference-network:
    external: true
      

